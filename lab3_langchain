
from langchain_community.vectorstores import AzureCosmosDBVectorSearch 
import json 
from langchain_openai import AzureOpenAIEmbeddings

#TODO: Why use the lanchain class if azure already allows vector search 

env_file = []
with open('env.json', 'r') as f:
    env_file = json.load(f)

embedding_model = AzureOpenAIEmbeddings(
    openai_api_version = env_file["API_VERSION"],
    azure_endpoint = env_file["AOAI_ENDPOINT"],
    openai_api_key = env_file["AOAI_KEY"],   
    azure_deployment = "text-embedding-ada-002",
    chunk_size=10
)

vector_store = AzureCosmosDBVectorSearch.from_connection_string(
    connection_string = env_file["CONNECTION_STRING"],
    namespace = "projects-development.products",
    embedding = embedding_model,
    index_name = "VectorSearchIndex",    
    embedding_key = "contentVector",
    text_key = "_id"
)

query = "What yellow products are there?"
results = vector_store.similarity_search(query, k=3)
for result in results:
    print(result)